/* Generated By:JavaCC: Do not edit this line. MiniJavaParserVisitor.h Version 7.0.10 */
#ifndef MINIJAVAPARSERVISITOR_H
#define MINIJAVAPARSERVISITOR_H

#include "JavaCC.h"
#include "MiniJavaParserTree.h"
class MiniJavaParserVisitor
{
  public:
  virtual void* visit(const SimpleNode *node, void* data) = 0;
  virtual void* visit(const ASTRoot *node, void* data) = 0;
  virtual void* visit(const ASTVarDecl *node, void* data) = 0;
  virtual void* visit(const ASTStmt *node, void* data) = 0;
  virtual void* visit(const ASTIfStatementNode *node, void* data) = 0;
  virtual void* visit(const ASTExp *node, void* data) = 0;
  virtual void* visit(const ASTUnaryNode *node, void* data) = 0;
  virtual void* visit(const ASTLiteralNode *node, void* data) = 0;
  virtual void* visit(const ASTIdentifier *node, void* data) = 0;
  virtual ~MiniJavaParserVisitor() { }
};
class MiniJavaParserDefaultVisitor : public MiniJavaParserVisitor {
public:
  virtual void* defaultVisit(const SimpleNode *node, void* data) = 0;
  virtual void* visit(const SimpleNode *node, void* data) {
    return defaultVisit(node, data);
}
  virtual void* visit(const ASTRoot *node, void* data) {
    return defaultVisit(node, data);
  }
  virtual void* visit(const ASTVarDecl *node, void* data) {
    return defaultVisit(node, data);
  }
  virtual void* visit(const ASTStmt *node, void* data) {
    return defaultVisit(node, data);
  }
  virtual void* visit(const ASTIfStatementNode *node, void* data) {
    return defaultVisit(node, data);
  }
  virtual void* visit(const ASTExp *node, void* data) {
    return defaultVisit(node, data);
  }
  virtual void* visit(const ASTUnaryNode *node, void* data) {
    return defaultVisit(node, data);
  }
  virtual void* visit(const ASTLiteralNode *node, void* data) {
    return defaultVisit(node, data);
  }
  virtual void* visit(const ASTIdentifier *node, void* data) {
    return defaultVisit(node, data);
  }
  ~MiniJavaParserDefaultVisitor() { }
};
#endif
/* JavaCC - OriginalChecksum=1d477b7e7641bf427e7d0b75fb29aea0 (do not edit this line) */
